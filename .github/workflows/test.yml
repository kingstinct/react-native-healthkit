# This is a basic workflow to help you get started with Actions

name: Test

on:
  workflow_call:
    inputs:
      bun-version:
        description: 'Bun Version'
        required: false
        type: string
      os:
        description: 'Operating System'
        required: false
        type: string
  workflow_dispatch:
    inputs:
      bun-version:
        description: 'Bun Version'
        required: false
        default: 'latest'
        type: string
      os:
        description: 'Operating System'
        required: false
        options:
          - 'ubuntu-latest'
          - 'macos-latest'
          - 'windows-latest'
        default: 'ubuntu-latest'
        type: choice
  
  push:
    branches:
      - "*" # matches every branch that doesn't contain a '/'
      - "*/*" # matches every branch containing a single '/'
      - "**" # matches every branch
      # - "!main" # matches every branch except main

env:
  RUNS_ON: ${{ inputs.os || 'ubuntu-latest' }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    # The type of runner that the job will run on
    runs-on: ${{ inputs.os || 'ubuntu-latest' }}
    timeout-minutes: 10
  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2

      - run: bun install

      - name: Test
        run: bun run test

  typecheck:
    runs-on: ${{ inputs.os || 'ubuntu-latest' }}
    timeout-minutes: 10

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2

      - run: bun install --ignore-scripts

      - name: Typecheck
        run: bun run typecheck

  lint:
    # The type of runner that the job will run on
    runs-on: ${{ inputs.os || 'ubuntu-latest' }}
    timeout-minutes: 10

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2

      - run: bun install --ignore-scripts

      - name: Lint
        run: bun run lint

  codegen:
    # The type of runner that the job will run on
    runs-on: ${{ inputs.os || 'ubuntu-latest' }}
    timeout-minutes: 10

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2

      - run: bun install --ignore-scripts

      - run: bun run nitro-codegen
        working-directory: packages/react-native-healthkit

  build-ios:
    # Only run on macOS since we need Xcode
    runs-on: macos-latest
    timeout-minutes: 20

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install

      - name: Expo Prebuild
        working-directory: apps/example
        run: bunx expo prebuild --platform ios

      # - name: Install CocoaPods dependencies
      #   working-directory: apps/example/ios
      #   run: pod install

      - name: Build iOS project
        working-directory: apps/example/ios
        run: |
          xcodebuild -workspace reactnativehealthkitexample.xcworkspace \
            -scheme reactnativehealthkitexample \
            -destination 'platform=iOS Simulator,name=iPhone 16,OS=latest' \
            -configuration Debug \
            clean build \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO