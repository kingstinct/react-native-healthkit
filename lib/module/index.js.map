{"version":3,"names":["Platform","HKAuthorizationRequestStatus","HKAuthorizationStatus","HKBiologicalSex","HKBloodType","HKFitzpatrickSkinType","HKUnits","HKWheelchairUse","notAvailableError","OS","hasWarned","UnavailableFn","retVal","console","warn","Healthkit","authorizationStatusFor","Promise","resolve","notDetermined","availableQuantityTypes","disableAllBackgroundDelivery","disableBackgroundDelivery","enableBackgroundDelivery","getBiologicalSex","notSet","getBloodType","getDateOfBirth","Date","getFitzpatrickSkinType","getMostRecentCategorySample","getMostRecentQuantitySample","getMostRecentWorkout","getPreferredUnit","Count","getPreferredUnits","getRequestStatusForAuthorization","unknown","getWheelchairUse","getWorkoutRoutes","isHealthDataAvailable","queryCategorySamples","queryCategorySamplesWithAnchor","samples","deletedSamples","newAnchor","queryCorrelationSamples","queryHeartbeatSeriesSamples","queryHeartbeatSeriesSamplesWithAnchor","queryQuantitySamples","queryQuantitySamplesWithAnchor","queryStatisticsForQuantity","averageQuantity","undefined","maximumQuantity","minimumQuantity","sumQuantity","mostRecentQuantity","mostRecentQuantityDateInterval","duration","queryWorkouts","querySources","queryStatisticsCollectionForQuantity","queryActivitySummaryForQuantity","queryWorkoutsWithAnchor","requestAuthorization","deleteQuantitySample","deleteSamples","saveCategorySample","saveCorrelationSample","saveQuantitySample","saveWorkoutSample","saveWorkoutRoute","subscribeToChanges","useMostRecentCategorySample","useMostRecentQuantitySample","useMostRecentWorkout","useSubscribeToChanges","useHealthkitAuthorization","useIsHealthDataAvailable","canAccessProtectedData","isProtectedDataAvailable"],"sources":["index.tsx"],"sourcesContent":["import { Platform } from 'react-native'\n\nimport {\n  HKAuthorizationRequestStatus, HKAuthorizationStatus, HKBiologicalSex, HKBloodType, HKFitzpatrickSkinType, HKUnits, HKWheelchairUse,\n} from './native-types'\n\nimport type ReactNativeHealthkit from './index.ios'\nimport type { QueryCategorySamplesFn } from './utils/queryCategorySamples'\nimport type { QueryQuantitySamplesFn } from './utils/queryQuantitySamples'\n\nconst notAvailableError = `[react-native-healthkit] Platform \"${\n  Platform.OS\n}\" not supported`\n\nlet hasWarned = false\n\nfunction UnavailableFn<T = unknown>(retVal: T) {\n  return () => {\n    if (!hasWarned) {\n      // eslint-disable-next-line no-console\n      console.warn(notAvailableError)\n      hasWarned = true\n    }\n    return retVal\n  }\n}\n\nconst Healthkit = {\n  authorizationStatusFor: UnavailableFn(Promise.resolve(HKAuthorizationStatus.notDetermined)),\n  availableQuantityTypes: UnavailableFn([]),\n  disableAllBackgroundDelivery: UnavailableFn(Promise.resolve(false)),\n  disableBackgroundDelivery: UnavailableFn(Promise.resolve(false)),\n  enableBackgroundDelivery: UnavailableFn(Promise.resolve(false)),\n  getBiologicalSex: UnavailableFn(Promise.resolve(HKBiologicalSex.notSet)),\n  getBloodType: UnavailableFn(Promise.resolve(HKBloodType.notSet)),\n  getDateOfBirth: UnavailableFn(Promise.resolve(new Date(0))),\n  getFitzpatrickSkinType: UnavailableFn(Promise.resolve(HKFitzpatrickSkinType.notSet)),\n  getMostRecentCategorySample: UnavailableFn(Promise.resolve(null)),\n  getMostRecentQuantitySample: UnavailableFn(Promise.resolve(null)),\n  getMostRecentWorkout: UnavailableFn(Promise.resolve(null)),\n  getPreferredUnit: UnavailableFn(Promise.resolve(HKUnits.Count)),\n  getPreferredUnits: UnavailableFn(Promise.resolve([])),\n  getRequestStatusForAuthorization: UnavailableFn(Promise.resolve(HKAuthorizationRequestStatus.unknown)),\n  getWheelchairUse: UnavailableFn(Promise.resolve(HKWheelchairUse.notSet)),\n  getWorkoutRoutes: UnavailableFn(Promise.resolve([])),\n  isHealthDataAvailable: async () => Promise.resolve(false),\n  queryCategorySamples: UnavailableFn(Promise.resolve([])) as unknown as QueryCategorySamplesFn,\n  queryCategorySamplesWithAnchor: UnavailableFn(Promise.resolve({\n    samples: [],\n    deletedSamples: [],\n    newAnchor: '',\n  })),\n  queryCorrelationSamples: UnavailableFn(Promise.resolve([])),\n  queryHeartbeatSeriesSamples: UnavailableFn(Promise.resolve([])),\n  queryHeartbeatSeriesSamplesWithAnchor: UnavailableFn(Promise.resolve({\n    samples: [],\n    deletedSamples: [],\n    newAnchor: '',\n  })),\n  queryQuantitySamples: UnavailableFn(Promise.resolve([])) as unknown as QueryQuantitySamplesFn,\n  queryQuantitySamplesWithAnchor: UnavailableFn(Promise.resolve({\n    samples: [],\n    deletedSamples: [],\n    newAnchor: '',\n  })),\n  queryStatisticsForQuantity: UnavailableFn(Promise.resolve({\n    averageQuantity: undefined,\n    maximumQuantity: undefined,\n    minimumQuantity: undefined,\n    sumQuantity: undefined,\n    mostRecentQuantity: undefined,\n    mostRecentQuantityDateInterval: undefined,\n    duration: undefined,\n  })),\n  queryWorkouts: UnavailableFn(Promise.resolve([])),\n  querySources: UnavailableFn(Promise.resolve([])),\n  queryStatisticsCollectionForQuantity: UnavailableFn(Promise.resolve([])),\n  queryActivitySummaryForQuantity: UnavailableFn(Promise.resolve([])),\n  queryWorkoutsWithAnchor: UnavailableFn(Promise.resolve({\n    samples: [],\n    deletedSamples: [],\n    newAnchor: '',\n  })),\n  requestAuthorization: UnavailableFn(Promise.resolve(false)),\n  deleteQuantitySample: UnavailableFn(Promise.resolve(false)),\n  deleteSamples: UnavailableFn(Promise.resolve(false)),\n  saveCategorySample: UnavailableFn(Promise.resolve(false)),\n  saveCorrelationSample: UnavailableFn(Promise.resolve(false)),\n  saveQuantitySample: UnavailableFn(Promise.resolve(false)),\n  saveWorkoutSample: UnavailableFn(Promise.resolve(null)),\n  saveWorkoutRoute: UnavailableFn(Promise.resolve(false)),\n  subscribeToChanges: UnavailableFn(Promise.resolve(async () => Promise.resolve(false))),\n  useMostRecentCategorySample: UnavailableFn(null),\n  useMostRecentQuantitySample: UnavailableFn(null),\n  useMostRecentWorkout: UnavailableFn(null),\n  useSubscribeToChanges: UnavailableFn([null, () => null]),\n  useHealthkitAuthorization: UnavailableFn([null, async () => Promise.resolve(HKAuthorizationRequestStatus.unknown)] as const),\n  useIsHealthDataAvailable: () => false,\n  canAccessProtectedData: async () => Promise.resolve(false),\n  isProtectedDataAvailable: async () => Promise.resolve(false),\n} as typeof ReactNativeHealthkit\n\nexport * from './types'\n\nexport default Healthkit as typeof ReactNativeHealthkit\n"],"mappings":"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"}