{"version":3,"names":["ensureUnit","Native","queryStatisticsCollectionForQuantity","identifier","options","from","to","unit","actualUnit","toDate","Date","data","toISOString","map","record","startDate","endDate"],"sources":["queryStatisticsCollectionForQuantity.ts"],"sourcesContent":["import ensureUnit from './ensureUnit'\nimport Native from '../native-types'\n\nimport type {\n  HKQuantityTypeIdentifier,\n  HKStatisticsOptions,\n  UnitForIdentifier,\n} from '../native-types'\n\nasync function queryStatisticsCollectionForQuantity<\n  TIdentifier extends HKQuantityTypeIdentifier,\n  TUnit extends UnitForIdentifier<TIdentifier> = UnitForIdentifier<TIdentifier>\n>(\n  identifier: TIdentifier,\n  options: readonly HKStatisticsOptions[],\n  from: Date,\n  to?: Date,\n  unit?: TUnit,\n) {\n  const actualUnit = await ensureUnit(identifier, unit)\n  const toDate = to || new Date()\n\n  const data = await Native.queryStatisticsCollectionForQuantity(\n    identifier,\n    actualUnit,\n    from.toISOString(),\n    toDate.toISOString(),\n    options,\n  )\n\n  return data.map((record) => ({\n    ...record,\n    startDate: new Date(record.startDate),\n    endDate: new Date(record.endDate),\n  }))\n}\n\nexport default queryStatisticsCollectionForQuantity\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,cAAc;AACrC,OAAOC,MAAM,MAAM,iBAAiB;AAQpC,eAAeC,oCAAoCA,CAIjDC,UAAuB,EACvBC,OAAuC,EACvCC,IAAU,EACVC,EAAS,EACTC,IAAY,EACZ;EACA,MAAMC,UAAU,GAAG,MAAMR,UAAU,CAACG,UAAU,EAAEI,IAAI,CAAC;EACrD,MAAME,MAAM,GAAGH,EAAE,IAAI,IAAII,IAAI,CAAC,CAAC;EAE/B,MAAMC,IAAI,GAAG,MAAMV,MAAM,CAACC,oCAAoC,CAC5DC,UAAU,EACVK,UAAU,EACVH,IAAI,CAACO,WAAW,CAAC,CAAC,EAClBH,MAAM,CAACG,WAAW,CAAC,CAAC,EACpBR,OACF,CAAC;EAED,OAAOO,IAAI,CAACE,GAAG,CAAEC,MAAM,KAAM;IAC3B,GAAGA,MAAM;IACTC,SAAS,EAAE,IAAIL,IAAI,CAACI,MAAM,CAACC,SAAS,CAAC;IACrCC,OAAO,EAAE,IAAIN,IAAI,CAACI,MAAM,CAACE,OAAO;EAClC,CAAC,CAAC,CAAC;AACL;AAEA,eAAed,oCAAoC"}