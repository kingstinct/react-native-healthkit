{"version":3,"names":["deserializeCorrelation","prepareOptions","Native","queryCorrelationSamples","typeIdentifier","options","opts","correlations","from","to","map"],"sources":["queryCorrelationSamples.ts"],"sourcesContent":["import deserializeCorrelation from './deserializeCorrelation'\nimport prepareOptions from './prepareOptions'\nimport Native from '../native-types'\n\nimport type { HKCorrelationTypeIdentifier } from '../native-types'\nimport type { GenericQueryOptions, HKCorrelation } from '../types'\n\nexport type QueryCorrelationSamplesFn = <\n  TIdentifier extends HKCorrelationTypeIdentifier\n>(\n  typeIdentifier: TIdentifier,\n  options: Omit<GenericQueryOptions, 'anchor' | 'ascending' | 'limit'>\n) => Promise<readonly HKCorrelation<TIdentifier>[]>;\n\nconst queryCorrelationSamples: QueryCorrelationSamplesFn = async (\n  typeIdentifier,\n  options,\n) => {\n  const opts = prepareOptions(options)\n  const correlations = await Native.queryCorrelationSamples(\n    typeIdentifier,\n    opts.from,\n    opts.to,\n  )\n\n  return correlations.map(deserializeCorrelation)\n}\n\nexport default queryCorrelationSamples\n"],"mappings":"AAAA,OAAOA,sBAAsB,MAAM,0BAA0B;AAC7D,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,MAAM,MAAM,iBAAiB;AAYpC,MAAMC,uBAAkD,GAAG,MAAAA,CACzDC,cAAc,EACdC,OAAO,KACJ;EACH,MAAMC,IAAI,GAAGL,cAAc,CAACI,OAAO,CAAC;EACpC,MAAME,YAAY,GAAG,MAAML,MAAM,CAACC,uBAAuB,CACvDC,cAAc,EACdE,IAAI,CAACE,IAAI,EACTF,IAAI,CAACG,EACP,CAAC;EAED,OAAOF,YAAY,CAACG,GAAG,CAACV,sBAAsB,CAAC;AACjD,CAAC;AAED,eAAeG,uBAAuB"}