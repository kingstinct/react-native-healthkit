{"version":3,"names":["_reactNative","require","_nativeTypes","_types","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","notAvailableError","Platform","OS","hasWarned","UnavailableFn","retVal","console","warn","Healthkit","authorizationStatusFor","Promise","resolve","HKAuthorizationStatus","notDetermined","availableQuantityTypes","disableAllBackgroundDelivery","disableBackgroundDelivery","enableBackgroundDelivery","getBiologicalSex","HKBiologicalSex","notSet","getBloodType","HKBloodType","getDateOfBirth","Date","getFitzpatrickSkinType","HKFitzpatrickSkinType","getMostRecentCategorySample","getMostRecentQuantitySample","getMostRecentWorkout","getPreferredUnit","HKUnits","Count","getPreferredUnits","getRequestStatusForAuthorization","HKAuthorizationRequestStatus","unknown","getWheelchairUse","HKWheelchairUse","getWorkoutRoutes","isHealthDataAvailable","queryCategorySamples","queryCategorySamplesWithAnchor","samples","deletedSamples","newAnchor","queryCorrelationSamples","queryHeartbeatSeriesSamples","queryHeartbeatSeriesSamplesWithAnchor","queryQuantitySamples","queryQuantitySamplesWithAnchor","queryStatisticsForQuantity","averageQuantity","undefined","maximumQuantity","minimumQuantity","sumQuantity","mostRecentQuantity","mostRecentQuantityDateInterval","duration","queryWorkouts","querySources","queryStatisticsCollectionForQuantity","queryActivitySummaryForQuantity","queryWorkoutsWithAnchor","requestAuthorization","deleteQuantitySample","deleteSamples","saveCategorySample","saveCorrelationSample","saveQuantitySample","saveWorkoutSample","saveWorkoutRoute","subscribeToChanges","useMostRecentCategorySample","useMostRecentQuantitySample","useMostRecentWorkout","useSubscribeToChanges","useHealthkitAuthorization","useIsHealthDataAvailable","canAccessProtectedData","isProtectedDataAvailable","_default","default"],"sources":["index.tsx"],"sourcesContent":["import { Platform } from 'react-native'\n\nimport {\n  HKAuthorizationRequestStatus, HKAuthorizationStatus, HKBiologicalSex, HKBloodType, HKFitzpatrickSkinType, HKUnits, HKWheelchairUse,\n} from './native-types'\n\nimport type ReactNativeHealthkit from './index.ios'\nimport type { QueryCategorySamplesFn } from './utils/queryCategorySamples'\nimport type { QueryQuantitySamplesFn } from './utils/queryQuantitySamples'\n\nconst notAvailableError = `[react-native-healthkit] Platform \"${\n  Platform.OS\n}\" not supported`\n\nlet hasWarned = false\n\nfunction UnavailableFn<T = unknown>(retVal: T) {\n  return () => {\n    if (!hasWarned) {\n      // eslint-disable-next-line no-console\n      console.warn(notAvailableError)\n      hasWarned = true\n    }\n    return retVal\n  }\n}\n\nconst Healthkit = {\n  authorizationStatusFor: UnavailableFn(Promise.resolve(HKAuthorizationStatus.notDetermined)),\n  availableQuantityTypes: UnavailableFn([]),\n  disableAllBackgroundDelivery: UnavailableFn(Promise.resolve(false)),\n  disableBackgroundDelivery: UnavailableFn(Promise.resolve(false)),\n  enableBackgroundDelivery: UnavailableFn(Promise.resolve(false)),\n  getBiologicalSex: UnavailableFn(Promise.resolve(HKBiologicalSex.notSet)),\n  getBloodType: UnavailableFn(Promise.resolve(HKBloodType.notSet)),\n  getDateOfBirth: UnavailableFn(Promise.resolve(new Date(0))),\n  getFitzpatrickSkinType: UnavailableFn(Promise.resolve(HKFitzpatrickSkinType.notSet)),\n  getMostRecentCategorySample: UnavailableFn(Promise.resolve(null)),\n  getMostRecentQuantitySample: UnavailableFn(Promise.resolve(null)),\n  getMostRecentWorkout: UnavailableFn(Promise.resolve(null)),\n  getPreferredUnit: UnavailableFn(Promise.resolve(HKUnits.Count)),\n  getPreferredUnits: UnavailableFn(Promise.resolve([])),\n  getRequestStatusForAuthorization: UnavailableFn(Promise.resolve(HKAuthorizationRequestStatus.unknown)),\n  getWheelchairUse: UnavailableFn(Promise.resolve(HKWheelchairUse.notSet)),\n  getWorkoutRoutes: UnavailableFn(Promise.resolve([])),\n  isHealthDataAvailable: async () => Promise.resolve(false),\n  queryCategorySamples: UnavailableFn(Promise.resolve([])) as unknown as QueryCategorySamplesFn,\n  queryCategorySamplesWithAnchor: UnavailableFn(Promise.resolve({\n    samples: [],\n    deletedSamples: [],\n    newAnchor: '',\n  })),\n  queryCorrelationSamples: UnavailableFn(Promise.resolve([])),\n  queryHeartbeatSeriesSamples: UnavailableFn(Promise.resolve([])),\n  queryHeartbeatSeriesSamplesWithAnchor: UnavailableFn(Promise.resolve({\n    samples: [],\n    deletedSamples: [],\n    newAnchor: '',\n  })),\n  queryQuantitySamples: UnavailableFn(Promise.resolve([])) as unknown as QueryQuantitySamplesFn,\n  queryQuantitySamplesWithAnchor: UnavailableFn(Promise.resolve({\n    samples: [],\n    deletedSamples: [],\n    newAnchor: '',\n  })),\n  queryStatisticsForQuantity: UnavailableFn(Promise.resolve({\n    averageQuantity: undefined,\n    maximumQuantity: undefined,\n    minimumQuantity: undefined,\n    sumQuantity: undefined,\n    mostRecentQuantity: undefined,\n    mostRecentQuantityDateInterval: undefined,\n    duration: undefined,\n  })),\n  queryWorkouts: UnavailableFn(Promise.resolve([])),\n  querySources: UnavailableFn(Promise.resolve([])),\n  queryStatisticsCollectionForQuantity: UnavailableFn(Promise.resolve([])),\n  queryActivitySummaryForQuantity: UnavailableFn(Promise.resolve([])),\n  queryWorkoutsWithAnchor: UnavailableFn(Promise.resolve({\n    samples: [],\n    deletedSamples: [],\n    newAnchor: '',\n  })),\n  requestAuthorization: UnavailableFn(Promise.resolve(false)),\n  deleteQuantitySample: UnavailableFn(Promise.resolve(false)),\n  deleteSamples: UnavailableFn(Promise.resolve(false)),\n  saveCategorySample: UnavailableFn(Promise.resolve(false)),\n  saveCorrelationSample: UnavailableFn(Promise.resolve(false)),\n  saveQuantitySample: UnavailableFn(Promise.resolve(false)),\n  saveWorkoutSample: UnavailableFn(Promise.resolve(null)),\n  saveWorkoutRoute: UnavailableFn(Promise.resolve(false)),\n  subscribeToChanges: UnavailableFn(Promise.resolve(async () => Promise.resolve(false))),\n  useMostRecentCategorySample: UnavailableFn(null),\n  useMostRecentQuantitySample: UnavailableFn(null),\n  useMostRecentWorkout: UnavailableFn(null),\n  useSubscribeToChanges: UnavailableFn([null, () => null]),\n  useHealthkitAuthorization: UnavailableFn([null, async () => Promise.resolve(HKAuthorizationRequestStatus.unknown)] as const),\n  useIsHealthDataAvailable: () => false,\n  canAccessProtectedData: async () => Promise.resolve(false),\n  isProtectedDataAvailable: async () => Promise.resolve(false),\n} as typeof ReactNativeHealthkit\n\nexport * from './types'\n\nexport default Healthkit as typeof ReactNativeHealthkit\n"],"mappings":"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"}