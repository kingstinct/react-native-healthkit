{"version":3,"names":["_nativeTypes","_interopRequireWildcard","require","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","getPreferredUnitsTyped","options","energyUnit","distanceUnit","units","Native","getPreferredUnits","HKQuantityTypeIdentifier","distanceWalkingRunning","activeEnergyBurned","UnitOfEnergy","Kilocalories","UnitOfLength","Meter","_default","exports"],"sources":["getPreferredUnitsTyped.ts"],"sourcesContent":["import Native, { HKQuantityTypeIdentifier, UnitOfEnergy, UnitOfLength } from '../native-types'\n\nimport type { HKUnit } from '../native-types'\n\nasync function getPreferredUnitsTyped<\n  TEnergy extends HKUnit,\n  TDistance extends HKUnit\n>(options?: { readonly energyUnit?: TEnergy; readonly distanceUnit?: TDistance }) {\n  let energyUnit = options?.energyUnit\n  let distanceUnit = options?.distanceUnit\n\n  if (!energyUnit || !distanceUnit) {\n    const units = await Native.getPreferredUnits([\n      HKQuantityTypeIdentifier.distanceWalkingRunning,\n      HKQuantityTypeIdentifier.activeEnergyBurned,\n    ])\n    if (!energyUnit) {\n      energyUnit = units[HKQuantityTypeIdentifier.activeEnergyBurned] as\n      | TEnergy\n      | undefined\n    }\n    if (!distanceUnit) {\n      distanceUnit = units[HKQuantityTypeIdentifier.distanceWalkingRunning] as\n      | TDistance\n      | undefined\n    }\n  }\n\n  if (!energyUnit) {\n    energyUnit = UnitOfEnergy.Kilocalories as TEnergy\n  }\n  if (!distanceUnit) {\n    distanceUnit = UnitOfLength.Meter as TDistance\n  }\n  return { energyUnit, distanceUnit }\n}\n\nexport default getPreferredUnitsTyped\n"],"mappings":";;;;;;AAAA,IAAAA,YAAA,GAAAC,uBAAA,CAAAC,OAAA;AAA8F,SAAAC,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAH,wBAAAO,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAI9F,eAAeW,sBAAsBA,CAGnCC,OAA8E,EAAE;EAChF,IAAIC,UAAU,GAAGD,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,UAAU;EACpC,IAAIC,YAAY,GAAGF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,YAAY;EAExC,IAAI,CAACD,UAAU,IAAI,CAACC,YAAY,EAAE;IAChC,MAAMC,KAAK,GAAG,MAAMC,oBAAM,CAACC,iBAAiB,CAAC,CAC3CC,qCAAwB,CAACC,sBAAsB,EAC/CD,qCAAwB,CAACE,kBAAkB,CAC5C,CAAC;IACF,IAAI,CAACP,UAAU,EAAE;MACfA,UAAU,GAAGE,KAAK,CAACG,qCAAwB,CAACE,kBAAkB,CAEnD;IACb;IACA,IAAI,CAACN,YAAY,EAAE;MACjBA,YAAY,GAAGC,KAAK,CAACG,qCAAwB,CAACC,sBAAsB,CAEzD;IACb;EACF;EAEA,IAAI,CAACN,UAAU,EAAE;IACfA,UAAU,GAAGQ,yBAAY,CAACC,YAAuB;EACnD;EACA,IAAI,CAACR,YAAY,EAAE;IACjBA,YAAY,GAAGS,yBAAY,CAACC,KAAkB;EAChD;EACA,OAAO;IAAEX,UAAU;IAAEC;EAAa,CAAC;AACrC;AAAC,IAAAW,QAAA,GAEcd,sBAAsB;AAAAe,OAAA,CAAA9B,OAAA,GAAA6B,QAAA"}