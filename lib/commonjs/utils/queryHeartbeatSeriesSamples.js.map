{"version":3,"names":["_deserializeHeartbeatSeriesSample","_interopRequireDefault","require","_prepareOptions","_nativeTypes","obj","__esModule","default","queryHeartbeatSeriesSamples","options","opts","prepareOptions","result","Native","from","to","limit","ascending","map","deserializeHeartbeatSeriesSample","_default","exports"],"sources":["queryHeartbeatSeriesSamples.ts"],"sourcesContent":["import deserializeHeartbeatSeriesSample from './deserializeHeartbeatSeriesSample'\nimport prepareOptions from './prepareOptions'\nimport Native from '../native-types'\n\nimport type { DeletedHeartbeatSeriesSampleRaw } from '../native-types'\nimport type { GenericQueryOptions, HKHeartbeatSeriesSample } from '../types'\n\nexport type QueryHeartbeatSeriesSamplesResponse = {\n  readonly samples: readonly HKHeartbeatSeriesSample[],\n  readonly deletedSamples: readonly DeletedHeartbeatSeriesSampleRaw[],\n  readonly newAnchor: string\n}\n\nexport type QueryHeartbeatSeriesSamplesFn = (options: Omit<GenericQueryOptions, 'anchor'>) => Promise<readonly HKHeartbeatSeriesSample[]>;\n\nconst queryHeartbeatSeriesSamples: QueryHeartbeatSeriesSamplesFn = async (options) => {\n  const opts = prepareOptions(options)\n\n  const result = await Native.queryHeartbeatSeriesSamples(\n    opts.from,\n    opts.to,\n    opts.limit,\n    opts.ascending,\n  )\n\n  return result.map(deserializeHeartbeatSeriesSample)\n}\n\nexport default queryHeartbeatSeriesSamples\n"],"mappings":";;;;;;AAAA,IAAAA,iCAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,eAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,YAAA,GAAAH,sBAAA,CAAAC,OAAA;AAAoC,SAAAD,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAapC,MAAMG,2BAA0D,GAAG,MAAOC,OAAO,IAAK;EACpF,MAAMC,IAAI,GAAG,IAAAC,uBAAc,EAACF,OAAO,CAAC;EAEpC,MAAMG,MAAM,GAAG,MAAMC,oBAAM,CAACL,2BAA2B,CACrDE,IAAI,CAACI,IAAI,EACTJ,IAAI,CAACK,EAAE,EACPL,IAAI,CAACM,KAAK,EACVN,IAAI,CAACO,SACP,CAAC;EAED,OAAOL,MAAM,CAACM,GAAG,CAACC,yCAAgC,CAAC;AACrD,CAAC;AAAA,IAAAC,QAAA,GAEcZ,2BAA2B;AAAAa,OAAA,CAAAd,OAAA,GAAAa,QAAA"}