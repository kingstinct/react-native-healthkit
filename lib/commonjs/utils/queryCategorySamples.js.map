{"version":3,"names":["_deserializeCategorySample","_interopRequireDefault","require","_prepareOptions","_nativeTypes","obj","__esModule","default","queryCategorySamples","identifier","options","opts","prepareOptions","raw","Native","from","to","limit","ascending","map","deserializeCategorySample","_default","exports"],"sources":["queryCategorySamples.ts"],"sourcesContent":["import deserializeCategorySample from './deserializeCategorySample'\nimport prepareOptions from './prepareOptions'\nimport Native from '../native-types'\n\nimport type { HKCategoryTypeIdentifier } from '../native-types'\nimport type { GenericQueryOptions, HKCategorySample } from '../types'\n\nexport type QueryCategorySamplesFn = <T extends HKCategoryTypeIdentifier>(\n  identifier: T,\n  options: Omit<GenericQueryOptions, 'anchor'>\n) => Promise<readonly HKCategorySample<T>[]>;\n\nconst queryCategorySamples: QueryCategorySamplesFn = async (\n  identifier,\n  options,\n) => {\n  const opts = prepareOptions(options)\n  const raw = await Native.queryCategorySamples(\n    identifier,\n    opts.from,\n    opts.to,\n    opts.limit,\n    opts.ascending,\n  )\n\n  return raw.map(deserializeCategorySample)\n}\n\nexport default queryCategorySamples\n"],"mappings":";;;;;;AAAA,IAAAA,0BAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,eAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,YAAA,GAAAH,sBAAA,CAAAC,OAAA;AAAoC,SAAAD,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAUpC,MAAMG,oBAA4C,GAAG,MAAAA,CACnDC,UAAU,EACVC,OAAO,KACJ;EACH,MAAMC,IAAI,GAAG,IAAAC,uBAAc,EAACF,OAAO,CAAC;EACpC,MAAMG,GAAG,GAAG,MAAMC,oBAAM,CAACN,oBAAoB,CAC3CC,UAAU,EACVE,IAAI,CAACI,IAAI,EACTJ,IAAI,CAACK,EAAE,EACPL,IAAI,CAACM,KAAK,EACVN,IAAI,CAACO,SACP,CAAC;EAED,OAAOL,GAAG,CAACM,GAAG,CAACC,kCAAyB,CAAC;AAC3C,CAAC;AAAA,IAAAC,QAAA,GAEcb,oBAAoB;AAAAc,OAAA,CAAAf,OAAA,GAAAc,QAAA"}