{"version":3,"names":["_reactNative","require","_useHealthkitAuthorization","_interopRequireDefault","_nativeTypes","_interopRequireWildcard","_testUtils","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","describe","test","jest","spyOn","Native","mockReturnValue","Promise","resolve","HKAuthorizationRequestStatus","shouldRequest","result","renderHook","useHealthkitAuthorization","HKCategoryTypeIdentifier","abdominalCramps","waitForNextUpdate","expect","current","toBe","spy","unnecessary","retVal","act"],"sources":["useHealthkitAuthorization.test.ts"],"sourcesContent":["import { renderHook, act } from '@testing-library/react-native'\n\nimport useHealthkitAuthorization from './useHealthkitAuthorization'\nimport Native, { HKAuthorizationRequestStatus, HKCategoryTypeIdentifier } from '../native-types'\nimport waitForNextUpdate from '../test-utils'\n\ndescribe('useHealthkitAuthorization', () => {\n  test('should return shouldRequest', async () => {\n    jest.spyOn(Native, 'getRequestStatusForAuthorization').mockReturnValue(Promise.resolve(HKAuthorizationRequestStatus.shouldRequest))\n\n    const { result } = renderHook(() => useHealthkitAuthorization([HKCategoryTypeIdentifier.abdominalCramps]))\n\n    await waitForNextUpdate()\n\n    expect(result.current[0]).toBe(HKAuthorizationRequestStatus.shouldRequest)\n  })\n\n  test('should request permissions', async () => {\n    const spy = jest.spyOn(Native, 'getRequestStatusForAuthorization').mockReturnValue(Promise.resolve(HKAuthorizationRequestStatus.shouldRequest))\n    jest.spyOn(Native, 'requestAuthorization').mockReturnValue(Promise.resolve(true))\n\n    const { result } = renderHook(() => useHealthkitAuthorization([HKCategoryTypeIdentifier.abdominalCramps]))\n\n    await waitForNextUpdate()\n\n    spy.mockReturnValue(Promise.resolve(HKAuthorizationRequestStatus.unnecessary))\n\n    let retVal: HKAuthorizationRequestStatus | undefined\n    await act(async () => {\n      retVal = await result.current[1]()\n    })\n\n    expect(result.current[0]).toBe(HKAuthorizationRequestStatus.unnecessary)\n    expect(retVal).toBe(HKAuthorizationRequestStatus.unnecessary)\n  })\n\n  test('should return unnecessary', async () => {\n    jest.spyOn(Native, 'getRequestStatusForAuthorization').mockReturnValue(Promise.resolve(HKAuthorizationRequestStatus.unnecessary))\n\n    const { result } = renderHook(() => useHealthkitAuthorization([HKCategoryTypeIdentifier.abdominalCramps]))\n\n    await waitForNextUpdate()\n\n    expect(result.current[0]).toBe(HKAuthorizationRequestStatus.unnecessary)\n  })\n\n  test('should return null before initalizing', async () => {\n    const { result } = renderHook(() => useHealthkitAuthorization([HKCategoryTypeIdentifier.abdominalCramps]))\n\n    expect(result.current[0]).toBe(null)\n\n    await waitForNextUpdate()\n  })\n})\n"],"mappings":"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"}